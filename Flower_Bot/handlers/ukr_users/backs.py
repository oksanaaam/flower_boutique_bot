from aiogram import types

from handlers.ukr_users.purchase import TRANSLATE_USER_LANG
from keyboards.reply.choise_reply_buttons import keyboards_reply
from loader import dp


@dp.message_handler(text=["‚¨Ö –ù–∞–∑–∞–¥", "‚¨Ö Back"])
async def back(message: types.Message) -> None:
    try:
        conn, cursor = TRANSLATE_USER_LANG.query_sql()
        dict_f = {
            "ukr": "–í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω–µ –∑ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ:",
            "eng": "Select one of the following:",
        }
        cursor.execute(
            f"SELECT language FROM translates_from_id WHERE user_id = {message.chat.id}"
        )
        select = cursor.fetchall()
        await message.answer(
            dict_f.get(select[0][0], dict_f["ukr"]),
            reply_markup=keyboards_reply.get(select[0][0], dict_f["ukr"])["start"],  # type: ignore[index]
        )
    except:
        await message.reply(
            "üá∫üá¶ –£ –∑–≤'—è–∑–∫—É –∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞, –ø–æ—á–Ω—ñ—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É\n\nüá∫üá∏ Due to the bot update, restart the bot with the /start command"
        )


@dp.message_handler(text=["‚¨Ö –ù–∞–∑–∞–¥ –¥–æ –ª–æ–∫–∞—Ü—ñ—ó", "‚¨Ö Back to location address"])
async def back_location(message: types.Message) -> None:
    try:
        conn, cursor = TRANSLATE_USER_LANG.query_sql()
        dict_f = {
            "ukr": "üìç –ù–∞–¥—ñ—à–ª—ñ—Ç—å –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
            "eng": "üìç Send the delivery location",
        }
        cursor.execute(
            f"SELECT language FROM translates_from_id WHERE user_id = {message.chat.id}"
        )
        select = cursor.fetchall()
        await message.answer(
            dict_f.get(select[0][0], dict_f["ukr"]),
            reply_markup=keyboards_reply.get(select[0][0], dict_f["ukr"])["location"],  # type: ignore[index]
        )
    except:
        await message.reply(
            "üá∫üá¶ –£ –∑–≤'—è–∑–∫—É –∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞, –ø–æ—á–Ω—ñ—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É\n\nüá∫üá∏ Due to the bot update, restart the bot with the /start command"
        )


@dp.message_handler(text=["‚¨Ö –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±—É–∫–µ—Ç—ñ–≤", "‚¨Ö Back to bouquets"])
async def back_to_bouquet(message: types.Message) -> None:
    try:
        conn, cursor = TRANSLATE_USER_LANG.query_sql()
        dict_f: dict[str, str] = {
            "ukr": "–í–∏–±–µ—Ä—ñ—Ç—å –±—É–∫–µ—Ç–∏",
            "eng": "Select bouquets:",
        }
        cursor.execute(
            f"SELECT language FROM translates_from_id WHERE user_id = {message.chat.id}"
        )
        select: list[tuple[str]] = cursor.fetchall()
        await message.answer(
            dict_f.get(select[0][0], dict_f["ukr"]),
            reply_markup=keyboards_reply.get(select[0][0], dict_f["ukr"])["Bouquet"],  # type: ignore[index]
        )
    except:
        await message.reply(
            "üá∫üá¶ –£ –∑–≤'—è–∑–∫—É –∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞, –ø–æ—á–Ω—ñ—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É\n\nüá∫üá∏ Due to the bot update, restart the bot with the /start command"
        )


@dp.message_handler(text=["‚¨Ö –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –º–µ–Ω—é", "‚¨Ö Back to menu"])
async def back_to_menu(message: types.Message) -> None:
    try:
        conn, cursor = TRANSLATE_USER_LANG.query_sql()
        dict_f = {
            "ukr": "–í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω–µ –∑ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ:",
            "eng": "Select one of the following:",
        }
        cursor.execute(
            f"SELECT language FROM translates_from_id WHERE user_id = {message.chat.id}"
        )
        select = cursor.fetchall()
        await message.answer(
            dict_f.get(select[0][0], dict_f["ukr"]),
            reply_markup=keyboards_reply.get(select[0][0], dict_f["ukr"])["Menu"],  # type: ignore[index]
        )
    except:
        await message.reply(
            "üá∫üá¶ –£ –∑–≤'—è–∑–∫—É –∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞, –ø–æ—á–Ω—ñ—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É\n\nüá∫üá∏ Due to the bot update, restart the bot with the /start command"
        )


@dp.message_handler(text=["‚¨Ö –ù–∞–∑–∞–¥ –¥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —á–∞—Å—É", "‚¨Ö Back to set time"])
async def back_to_setting_time(message: types.Message) -> None:
    try:
        conn, cursor = TRANSLATE_USER_LANG.query_sql()
        dict_f = {
            "ukr": "–í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω–µ –∑ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ:",
            "eng": "Select one of the following:",
        }
        cursor.execute(
            f"SELECT language FROM translates_from_id WHERE user_id = {message.chat.id}"
        )
        select = cursor.fetchall()
        await message.answer(
            dict_f.get(select[0][0], dict_f["ukr"]),
            reply_markup=keyboards_reply.get(select[0][0], dict_f["ukr"])["Order"],  # type: ignore[index]
        )
    except:
        await message.reply(
            "üá∫üá¶ –£ –∑–≤'—è–∑–∫—É –∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞, –ø–æ—á–Ω—ñ—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É\n\nüá∫üá∏ Due to the bot update, restart the bot with the /start command"
        )
